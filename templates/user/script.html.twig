<script>

function getPub(pub_id, message, confid, tbl_pub) {
    document.querySelector("#pub_id_modif").value = pub_id;
    document.querySelector("#tbl_pub").value = tbl_pub;
    document.querySelector("#option_modif").value = confid;
    document.querySelector("#message-text_modif").innerHTML = message;
}

function updatePublication() { 
        let table_pub = document.querySelector("#tbl_pub").value;
		let data = {
		"pub_id": document.querySelector("#pub_id_modif").value,
		"confidentiality": document.querySelector("#option_modif").value,
		"message": document.querySelector("#message-text_modif").value
		}

		fetch(new Request("/user/tribu/update_publication/"+table_pub, {
		method: "POST",
		headers: {
		'Accept': 'application/json',
		'Content-Type': 'application/json'
		},
		body: JSON.stringify(data)
		}));

        location.reload();
	
}

function setReaction(pub_id, reaction, table_reaction) {
    let table_tribu = table_reaction.replace(/_reaction$/, "");
    let data = {
        "pub_id": pub_id,
        "user_id_pub": document.querySelector("#user_id_" + pub_id+ "_" + table_tribu).value,
        "is_like": reaction,
        "table_reaction": table_reaction
    }

    console.log(data)

    fetch(new Request("/user/tribu/new_reaction", {
        method: "POST",
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })).then(x => x.json()).then(response => console.log(response));

}

function IsLike(pub_id, x, table_reaction) {
    if (x.classList == "bi-heart-fill") {
        x.classList.remove("bi-heart-fill")
        x.classList.toggle("bi-heart");
        x.style.color = "black";
        setReaction(pub_id, 0, table_reaction);
    } else {
        x.classList.remove("bi-heart")
        x.classList.add("bi-heart-fill");
        x.style.color = "red";
        setReaction(pub_id, 1, table_reaction);
        console.log("addedd...")
    }

}

let boutons = document.querySelectorAll("[id^=submitComment_]");
let forms = document.querySelectorAll("[id^=form_]");
forms.forEach((bouton) => {
    let table_tribu = bouton.dataset.tb;
    console.log("table_tribu : " + table_tribu);
    let table_com = table_tribu + "_commentaire";
    console.log("table_com : " + table_com);
    bouton.addEventListener("submit", (e) => {
        e.preventDefault();

        let i = e.target.id.split("_tribu_t_")[0].replace(/[^0-9]/g, "");

        console.log("i : " + i);

        let data = {
            "table_com": table_com,
            "pub_id": document.querySelector("#pub_id_" + i + "_" + table_tribu).value,
            "user_id_pub": document.querySelector("#user_id_" + i + "_" + table_tribu).value,
            "new_comment": document.querySelector("#newComment_" + i + "_" + table_tribu).value
        }

        if (document.querySelector("#newComment_" + i + "_" + table_tribu).value != "") {
            fetch(new Request("/user/tribu/new_commentaire", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            }));

            document.querySelector("#newComment_" + i + "_" + table_tribu).value = "";

        } else {
            document.querySelector("#comment_vide_" + i + "_" + table_tribu).style.display = "block";
            setTimeout(() => {
                document.querySelector("#comment_vide_" + i + "_" + table_tribu).style.display = "none";
            }, 2000);
        }
    });

    let pubId = bouton.id.split("_tribu_t_")[0].replace(/[^0-9]/g, "");

    let source = new EventSource("/events/commentaires?pub_id=" + pubId + "&table="+table_tribu+"_publication", { withCredentials: true });

    source.onmessage = function (event) {
        //console.log(JSON.parse(event.data));
        ///console.log(JSON.parse(event.data)[0].now_date);
        let nbrReact = JSON.parse(event.data)[0].reaction;
        let contentNbReaction = document.querySelector("#nombreReaction" + pubId + "_" + table_tribu);

        if (nbrReact > 0) {
            contentNbReaction.textContent = nbrReact
        } else {
            contentNbReaction.textContent = "";
        }

        if(JSON.parse(event.data)[0].reactionStatus == 1){
            contentNbReaction.nextElementSibling.classList.remove("bi-heart");
            contentNbReaction.nextElementSibling.classList.add("bi-heart-fill");
        }else{
            contentNbReaction.nextElementSibling.classList.remove("bi-heart-fill");
            contentNbReaction.nextElementSibling.classList.add("bi-heart");
        }

        let comments = "";
        let commentSize = JSON.parse(event.data)[0].comments.length;

        if (commentSize > 0) {
            document.querySelector("#commentNotnul_" + pubId + "_" + table_tribu).style.display = "block";
            document.querySelector("#nbComment" + pubId + "_" + table_tribu).innerHTML = commentSize + " <i class='bi bi-chat-square'></i>";
        }else{
            document.querySelector("#commentNotnul_" + pubId + "_" + table_tribu).style.display = "none";
            document.querySelector("#nbComment" + pubId + "_" + table_tribu).innerHTML = "<i class='bi bi-chat-square'></i>";
        }

        function showRemoveUpdateComment(id){
            let drop = `<span class="float-end dropstart">
                <span id="modifComs" class="float-end" style="cursor:pointer" data-bs-toggle="dropdown">
                    <i class="bi bi-three-dots" style="cursor:pointer"></i>
                </span>
                <ul class="dropdown-menu">
                    <li>
                        <button data-bs-toggle="modal" data-bs-target="#modal_commentaire_modif" class="dropdown-item" onclick="restoreComment(${id}, '${table_com}')" >Modifier</button>
                    </li>
                    <li>
                        <button onclick="confirmComment(${id}, '${table_com}')" data-bs-toggle="modal" data-bs-target="#deleteCommModalConfirm" class="dropdown-item" >Supprimer</button>
                    </li>
                </ul>
            </span>`;

            return drop;
        }

        let dropContent = "";

        for (let result of JSON.parse(event.data)[0].comments) {
            if(result.user_id != {{ app.user.id }}){
                dropContent = "";
            }else{
                dropContent = showRemoveUpdateComment(result.id);
            }
            comments += `<div class="row card m-1 pt-2 pl-3" id="${table_com}_${result.id}">
                                            <label><i class="bi bi-person-circle"></i>
                                            <a href="/user/profil/${result.user_id
                }"> ${result.userfullname
                } </a><small>${diff4humans(new Date(JSON.parse(event.data)[0].now_date), new Date(result.datetime))
                }</small>${dropContent}
                                            </label><p id="content_comment_number_${result.id}">${result.commentaire
                }</p>
                                        </div>`;
        }

        document.querySelector("#comment" + pubId + "_" + table_tribu + " > div").innerHTML = comments;

    };

})

function confirmComment(pub_id, tbl_com){
            
    document.querySelector("#data-pub-id-comm").value = pub_id;
    document.querySelector("#comment_table_delete").value = tbl_com;

}

function confirm(pub_id, tbl_pub){
            
    document.querySelector("#data-pub-id").value = pub_id;
    document.querySelector("#tbl_pub_remove").value = tbl_pub;

}

function removePublication(elem){
    let table_pub = document.querySelector("#tbl_pub_remove").value;
    document.querySelector("#pub_number_"+elem.value+"_"+table_pub).remove();
    fetch(new Request("/user/tribu/publication/remove/"+table_pub+"/" + elem.value, {
        method: "GET",
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        }
    })).then(rqt => rqt.json()).then(data => console.log(data));

}

function removeCommentaire(comment_id){

    document.querySelector("#"+document.querySelector("#comment_table_delete").value+"_"+comment_id.value).remove();
    //document.querySelector("#"+document.querySelector("#comment_table_delete").value+"_"+comment_id.value).style.backgroundColor = "red";
    fetch(new Request("/user/tribu/publication/remove/"+document.querySelector("#comment_table_delete").value+"/" + comment_id.value, {
        method: "GET",
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        }
    })).then(rqt => rqt.json()).then(data => console.log(data));
}

function restoreComment(id,tbl_com){
    let contetComs = document.querySelector("#content_comment_number_"+id);
    document.querySelector("#comment_table_modif").value = tbl_com;
    document.querySelector("#comment_id_modif").value = id;
    document.querySelector("#comment_text_modif").value = contetComs.textContent;

}

function updateCommentaire(){
    let data = {
        id : document.querySelector("#comment_id_modif").value,
        commentaire : document.querySelector("#comment_text_modif").value
    }
    
    fetch(new Request("/user/tribu/update_comment/"+document.querySelector("#comment_table_modif").value, {
        method: "POST",
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })).then(x => x.json()).then(response => console.log(response));
    
}

function diff4humans(dateEnd, dateStart) {

    var delta = Math.round((dateEnd - dateStart) / 1000); // en seconde

    var minute = 60,
        hour = minute * 60,
        day = hour * 24,
        week = day * 7;

    var fuzzy;

    if (delta < 30) {
        fuzzy = "Ã  l'instant";
    } else if (delta < minute) {
        fuzzy = 'il y a ' + delta + ' seconds';
    } else if (delta < 2 * minute) {
        fuzzy = 'il y a 1 minute'
    } else if (delta < hour) {
        fuzzy = 'il y a ' + Math.floor(delta / minute) + ' minutes';
    } else if (Math.floor(delta / hour) == 1) {
        fuzzy = 'il y a 1 heure'
    } else if (delta < day) {
        fuzzy = 'il y a ' + Math.floor(delta / hour) + ' heures';
    } else if (delta < day * 2) {
        fuzzy = 'hier';
    } else {
        fuzzy = 'il y a ' + Math.floor(delta / day) + ' jours';
    }

    return fuzzy;
}

</script>