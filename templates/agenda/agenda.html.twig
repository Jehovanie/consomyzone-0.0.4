{% extends 'base.html.twig' %}

{% block title %}
	ConsoMyZone : Agenda
{% endblock %}

{% block stylesheets %}

    <link rel="stylesheet" href="{{asset('assets/css/account/style.css')}}">
	<link rel="stylesheet" href="{{asset('assets/css/account/agenda/fullCalandar/core/main.css')}}">
	<link rel="stylesheet" href="{{asset('assets/css/account/agenda/fullCalandar/daygrid/main.css')}}">
	<link rel="stylesheet" href="{{asset('assets/css/account/agenda/agenda.css')}}">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.css"/>
	{# <link rel="stylesheet" href="{{asset('assets/css/account/agenda/agenda.css')}}"> #}
{% endblock %}


{% block javascripts %}
        <script>
        
      /* exported gapiLoaded */
      /* exported gisLoaded */
      /* exported handleAuthClick */
      /* exported handleSignoutClick */

      // TODO(developer): Set to client ID and API key from the Developer Console
      const CLIENT_ID = '255432554809-5p3ok9oqf8b01t7t9qm6b0f025pb3ic0.apps.googleusercontent.com';
      const API_KEY = 'AIzaSyAgRZx8IHeathsCXyxPViIH4-a7Zj1d_H4';

      // Discovery doc URL for APIs used by the quickstart
      const DISCOVERY_DOC = 'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest';

      // Authorization scopes required by the API; multiple scopes can be
      // included, separated by spaces.
      const SCOPES = 'https://www.googleapis.com/auth/calendar';

      var tokenClient;
      let gapiInited = false;
      let gisInited = false;

      document.getElementById('authorize_button').style.visibility = 'hidden';
      document.getElementById('signout_button').style.visibility = 'hidden';

      /**
       * Callback after api.js is loaded.
       */
      function gapiLoaded() {
        gapi.load('client', initializeGapiClient);
      }

      /**
       * Callback after the API client is loaded. Loads the
       * discovery doc to initialize the API.
       */
      async function initializeGapiClient() {
        await gapi.client.init({
          apiKey: API_KEY,
          discoveryDocs: [DISCOVERY_DOC],
        });
        gapiInited = true;
        
      }

      /**
       * Callback after Google Identity Services are loaded.
       */
      function gisLoaded() {
        tokenClient = google.accounts.oauth2.initTokenClient({
          client_id: CLIENT_ID,
          scope: SCOPES,
          callback: '', // defined later
        });
        gisInited = true;
       console.log(tokenClient)
      }

     function openModalForConfirmAddToGoogleCalendar(){
        if(document.querySelector("#btnClickModal"))
          document.querySelector("#btnClickModal").click()
     }
      /**
       * Enables user interaction after all libraries are loaded.
       */
      function maybeEnableButtons() {
        if (gapiInited && gisInited) {
          document.getElementById('authorize_button').style.visibility = 'visible';
        }
      }

      /**
       *  Sign in the user upon button click.
       */
      function handleAuthClick() {
        tokenClient.callback = async (resp) => {
          if (resp.error !== undefined) {
            throw (resp);
          }
          document.getElementById('signout_button').style.visibility = 'visible';
          document.getElementById('authorize_button').innerText = 'Refresh';
          await listUpcomingEvents();
        };

        if (gapi.client.getToken() === null) {
          // Prompt the user to select a Google Account and ask for consent to share their data
          // when establishing a new session.
          tokenClient.requestAccessToken({prompt: 'consent'});
        } else {
          // Skip display of account chooser and consent dialog for an existing session.
          tokenClient.requestAccessToken({prompt: ''});
        }
      }

      /**
       *  Sign out the user upon button click.
       */
      function handleSignoutClick() {
        const token = gapi.client.getToken();
        if (token !== null) {
          google.accounts.oauth2.revoke(token.access_token);
          gapi.client.setToken('');
          // document.getElementById('content').innerText = '';
          // document.getElementById('authorize_button').innerText = 'Authorize';
          // document.getElementById('signout_button').style.visibility = 'hidden';
        }
      }

      /**
       * Print the summary and start datetime/date of the next ten events in
       * the authorized user's calendar. If no events are found an
       * appropriate message is printed.
       */
      async function listUpcomingEvents() {
        let response;
        try {
          const request = {
            'calendarId': 'primary',
            'timeMin': (new Date()).toISOString(),
            'showDeleted': false,
            'singleEvents': true,
            'maxResults': 10,
            'orderBy': 'startTime',
          };
          response = await gapi.client.calendar.events.list(request);
        } catch (err) {
          document.getElementById('content').innerText = err.message;
          return;
        }

        const events = response.result.items;
        if (!events || events.length == 0) {
          document.getElementById('content').innerText = 'No events found.';
          return;
        }
        // Flatten to string to display
        const output = events.reduce(
            (str, event) => `${str}${event.summary} (${event.start.dateTime || event.start.date})\n`,
            'Events:\n');
        document.getElementById('content').innerText = output;
      }
   
</script>
        {# ----------------------agendea-------------------- #}
        {# <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js" integrity="sha512-2rNj2KJ+D8s1ceNasTIex6z4HWyOnEYLVC3FigGOmyQCZc2eBXKgOxQmo3oKLHyfcj53uz4QMsRCWNbLd32Q1g==" crossorigin="anonymous" referrerpolicy="no-referrer" defer></script> #}
        <script src="{{asset('assets/js/agenda/fullCalandar/core/main.js')}}" defer></script>
        <script src="{{asset('assets/js/agenda/fullCalandar/interaction/main.js')}}" defer></script>
        <script src="{{asset('assets/js/agenda/fullCalandar/daygrid/main.js')}}" defer></script>
        <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js" defer></script>
        
        <script   async defer src="https://apis.google.com/js/api.js" onload="gapiLoaded()" ></script>
        <script  async defer src="https://accounts.google.com/gsi/client" onload="gisLoaded()" ></script>
        <script src="{{asset('assets/js/agenda/agenda.js')}}" defer></script>
        <script  src="{{ asset('assets/js/account/account.js') }}" defer></script>
{% endblock %}


{% block body %}
    <div class="nh">
        {% include 'shard/account_navleft_new.html.twig' %}
        {% include 'shard/account_navbar_new.html.twig' %}
        <!-- ===== Main Content Start ===== -->
        <main class="gv hm hv">
            <div class="sk bu 2xl:ud-p-11">
                <!-- ====== Calendar Section Start -->
                <div class="content">
                    <div id='calendar' class="fc fc-ltr fc-unthemed"></div>
                </div>
                <!-- ====== Calendar Section End -->
              
            </div>
        </main>
        <!-- ===== Main Content End ===== -->
        <button type="button" class=" d-none show_modal_createAgenda_jheo_js" data-bs-toggle="modal" data-bs-target="#createAgenda"></button>
        <button type="button" class=" d-none show_modal_showAgenda_jheo_js" data-bs-toggle="modal" data-bs-target="#showAgenda"></button>
    </div>

    {# <div class="content_loader_agenda hidden content_loader_agenda_js_jheo">
        <div class="chargement_content chargement_content_js_jheo" id="toggle_chargement">
        </div>
    </div>

    <div class="content_response_share_agenda">
        
    </div> #}
    {% include 'shard/modal/new_agenda.html.twig' %}
    {% include 'shard/modal/show_agenda.html.twig' %}
    {% include 'shard/modal/partage_agenda.html.twig' %}
    {% include 'shard/modal/alert_flash.html.twig' %}
{% endblock %}
